rule:
  meta:
    name: access PEB ldr_data
    namespace: linking/runtime-linking
    author: moritz.raabe@fireeye.com
    scope: function
    att&ck:
      - Execution::Shared Modules [T1129]
    examples:
      - 3FDFB2D522E7DEECAAAF2F87420F7E75:0x4117B7
  features:
    - or:
      # x32
      - and:
        # resolve the PEB
        - or:
          - characteristic: peb access

        # x86 Windows uses fs:0 to access the TIB which contains SEH information at offset 0
        # checking for fs:0 and a (possibly unrelated) number or offset often results in false positives

        # LDR_DATA* Ldr;
        # good PEB layout reference here:
        # https://www.geoffchappell.com/studies/windows/win32/ntdll/structs/peb_ldr_data.htm
        - offset: 0x0C  # x32

        # resolve a module list
        - or:
          # LIST_ENTRY    InLoadOrderModuleList;
          - offset: 0x0C  # x32
          # LIST_ENTRY    InMemoryOrderModuleList;
          - offset: 0x14  # x32
          # LIST_ENTRY    InInitializationOrderModuleList;
          - offset: 0x1C  # x32

      # x64
      - and:
        # resolve the PEB
        - or:
          - characteristic: peb access
          # in the case of CallObfuscator, gs:[rax]
          # ref: https://github.com/d35ha/CallObfuscator/blob/5834aff9ff4511f1408ae4ce80b79737af4ae77b/ShellCode/shell_x64.asm#L8
          - and:
            - number: 0x60  # x64
            - characteristic: gs access
          # in 0f5d5d07c6533bc6d991836ce79daaa1
          # then we have:
          #
          #     xor edx, edx
          #     mov edx, fs:[edx+30h]
          - and:
            - offset: 0x60  # x64
            - characteristic: gs access

        # LDR_DATA* Ldr;
        # good PEB layout reference here:
        # https://www.geoffchappell.com/studies/windows/win32/ntdll/structs/peb_ldr_data.htm
        - offset: 0x18  # x64

        # resolve a module list
        - or:
          # LIST_ENTRY    InLoadOrderModuleList;
          - offset: 0x10  # x64
          # LIST_ENTRY    InMemoryOrderModuleList;
          - offset: 0x20  # x64
          # LIST_ENTRY    InInitializationOrderModuleList;
          - offset: 0x30  # x64
